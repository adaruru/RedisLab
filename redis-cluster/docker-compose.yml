services:
  redis-cluster-ap1:
    build:
      context: ../
      dockerfile: AP/Dockerfile
    container_name: redis-cluster-ap1
    environment:
    - ASPNETCORE_ENVIRONMENT=RedisCluster
    - ASPNETCORE_HTTP_PORTS=80
    - TZ=Asia/Taipei
    ports:
    - "8002:80"

  node1:
    image: redis:6.2.19
    container_name: node1
    command: redis-server --port 7001 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --cluster-announce-ip 192.168.1.91 --appendonly yes
    ports:
    - "7001:7001"
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7001", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30

  node2:
    image: redis:6.2.19
    container_name: node2
    command: redis-server --port 7002 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --cluster-announce-ip 192.168.1.91 --appendonly yes
    ports:
    - "7002:7002"
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7002", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30

  node3:
    image: redis:6.2.19
    container_name: node3
    command: redis-server --port 7003 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --cluster-announce-ip 192.168.1.91 --appendonly yes
    ports:
    - "7003:7003"
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7003", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30

  node4:
    image: redis:6.2.19
    container_name: node4
    command: redis-server --port 7004 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --cluster-announce-ip 192.168.1.91 --appendonly yes
    ports:
    - "7004:7004"
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7004", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30

  node5:
    image: redis:6.2.19
    container_name: node5
    command: redis-server --port 7005 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --cluster-announce-ip 192.168.1.91 --appendonly yes
    ports:
    - "7005:7005"
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7005", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30

  node6:
    image: redis:6.2.19
    container_name: node6
    command: redis-server --port 7006 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --cluster-announce-ip 192.168.1.91 --appendonly yes
    ports:
    - "7006:7006"
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7006", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30

  redis-cluster-creator:
    image: redis
    entrypoint: [ /bin/sh, -c, 'echo "yes" | redis-cli --cluster create node1:7001 node2:7002 node3:7003 node4:7004 node5:7005 node6:7006 --cluster-replicas 1' ]
    depends_on:
      node1:
        condition: service_healthy
      node2:
        condition: service_healthy
      node3:
        condition: service_healthy
      node4:
        condition: service_healthy
      node5:
        condition: service_healthy
      node6:
        condition: service_healthy
